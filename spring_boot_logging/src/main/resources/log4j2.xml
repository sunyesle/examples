<?xml version="1.0" encoding="UTF-8"?>
<Configuration>

    <!-- Property를 설정하여, xml 파일 내부의 변수로 사용할 수 있다. 변수는 ${name} 형태로 사용할 수 있다. -->
    <Properties>
        <Property name="logPath">./logs</Property>
        <Property name="consoleLogPattern">%d{yyyy-MM-dd HH:mm:ss.SSS} %style{%-5p}{green} [%15t] %style{%-40c{1.}}{cyan} : %m%n</Property>
        <Property name="fileLogPattern">%d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%t] %c{1.} : %m%n</Property>
        <Property name="serviceName">application</Property>
    </Properties>

    <!-- Appender는 로그 메시지를 특정 위치에 전달해 주는 역할을 한다. -->
    <Appenders>
        <!-- <Console>: 콘솔에 로그를 출력하는 Appender를 설정한다. -->
        <!--    <PatternLayout>: 출력되는 로그의 형식을 설정한다. -->
        <Console name="console">
            <PatternLayout pattern="${consoleLogPattern}" disableAnsi="false" />
        </Console>

        <!-- <RollingFile>: 파일에 로그를 기록하는 Appender를 정의한다. Rolling file appender는 파일의 크기 또는 시간에 따라 새로운 파일을 생성한다. -->
        <!-- fileName: 로그 파일의 경로와 이름 -->
        <!-- filePattern: rolling file 패턴 -->
        <!--    <Policies>: 로그 파일의 롤오버 시점을 설정한다. -->
        <!--        <SizeBasedTriggeringPolicy>: 파일 크기 기반 롤오버 정책 -->
        <!--        <TimeBasedTriggeringPolicy>: 시간 기반 롤오버 정책 -->
        <!--    <DefaultRolloverStrategy>: 로그 파일의 롤오버 전략을 설정한다. -->
        <!--        <Delete>: 로그 파일 삭제 전략을 설정한다. -->
        <!--            <IfLastModified>: 파일의 마지막 수정일을 기준으로 파일을 삭제한다. -->
        <RollingFile name="file" append="true" fileName="${logPath}/${serviceName}.log" filePattern="${logPath}/${serviceName}.%d{yyyy-MM-dd}.%i.log.gz">
            <PatternLayout pattern="${fileLogPattern}" disableAnsi="true"/>
            <Policies>
                <SizeBasedTriggeringPolicy size="10MB"/>
                <TimeBasedTriggeringPolicy/>
            </Policies>
            <DefaultRolloverStrategy>
                <Delete basePath="${logPath}">
                    <IfLastModified age="15d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </Appenders>

    <!-- 로그 레벨을 설정하고, 로그 이벤트를 특정 Appender에 연결한다. -->
    <Loggers>
        <Logger name="org.springframework" level="DEBUG" additivity="false">
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </Logger>
        <Logger name="com.sunyesle.spring_boot_logging" level="DEBUG" additivity="false" >
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </Logger>
        <Root level="INFO" additivity="false" >
            <AppenderRef ref="console" />
            <AppenderRef ref="file" />
        </Root>
    </Loggers>

</Configuration>
